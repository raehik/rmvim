#!/bin/bash

#	REGEX EXPLANATION
#	"\./"	: = "./", needed because of how find 'finds' files
#	".+"	: file must have at least 1 character other than '~'
#		  This means that the file "~" will not match. "~~" will,
#		  however.
#	"~$"	: tilde at the end of the file name

while getopts "fr" opt; do
	case $opt in
		f) # force, no prompt
			no_prompt=true
			;;
		r) # recursive
			tilde_files=true
			;;
	esac			
done

if [ $is_recursive ]; then
	tilde_files=`find . -mindepth 1 -type f -regex "\./.+~$"`
else
	tilde_files=`find . -maxdepth 1 -mindepth 1 -type f -regex "\./.+~$"`
fi

if [[ -z ${tilde_files} ]]; then # if is null (none found)
	echo "No ~ files found."
	exit 1
else
	for file in ${tilde_files}
	do
		if [ ${no_prompt} ]; then
			rm_err="$(rm -f ${file} 2>&1 1> /dev/null)"
			if [ $? -eq 0 ]; then
				echo "${file} removed successfully"
			else
				echo "${file} not removed: ${rm_err}"
			fi
			continue
		fi
		read -n 1 -p "Remove '${file}'? (y/n): " yn
		if [ "$yn" == "y" ]; then
			rm -f ${file} 2> /dev/null
			if [ $? -ne 0 ]; then
				echo
				echo -n "rm had an error. Continuing."
			fi
		else
			echo
			echo -en "Not removing ${file}."
		fi
	echo
	done
fi
